"""alembic

Revision ID: 429bff42b643
Revises: 
Create Date: 2023-12-17 22:20:50.951070

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '429bff42b643'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cake_category_association')
    op.drop_index('ix_categories_id', table_name='categories')
    op.drop_index('ix_categories_name', table_name='categories')
    op.drop_table('categories')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.add_column('cakes', sa.Column('category', sa.Text(), nullable=True))
    op.alter_column('cakes', 'flavor',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('cakes', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.drop_index('ix_cakes_name', table_name='cakes')
    op.create_index(op.f('ix_cakes_category'), 'cakes', ['category'], unique=False)
    op.drop_constraint('cakes_owner_id_fkey', 'cakes', type_='foreignkey')
    op.drop_column('cakes', 'owner_id')
    op.drop_column('cakes', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('cakes', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('cakes', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('cakes_owner_id_fkey', 'cakes', 'users', ['owner_id'], ['id'])
    op.drop_index(op.f('ix_cakes_category'), table_name='cakes')
    op.create_index('ix_cakes_name', 'cakes', ['name'], unique=False)
    op.alter_column('cakes', 'price',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('cakes', 'flavor',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('cakes', 'category')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('categories_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='categories_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_categories_name', 'categories', ['name'], unique=False)
    op.create_index('ix_categories_id', 'categories', ['id'], unique=False)
    op.create_table('cake_category_association',
    sa.Column('cake_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cake_id'], ['cakes.id'], name='cake_category_association_cake_id_fkey'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='cake_category_association_category_id_fkey')
    )
    # ### end Alembic commands ###
